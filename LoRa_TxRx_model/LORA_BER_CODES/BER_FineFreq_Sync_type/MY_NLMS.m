function [FilterOutput, w] = MY_NLMS(N, mu, DesiredSignal, TrainSignal, InputSignal);

%% =============================================== Входные аргументы функции
%N               - % Порядок фильтра
%beta            - % коэффициент 0<B<2
%DesiredSignal   - % Опорный сигнал
%InputSignal     - % Входной искаженный сигнал
%NumIter         - % Количество итераций
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%% =============================================== Выходные аргументы функции
%FilterOutput    - % Выходной сигнал фильтра
%ErrorSignal     - % Сигнал ошибки фильтра
%ErrorContinious - % Сигнал ошибки подстройки
%w               - % Вектор коэффициентов
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~





%% =============================================== Adaptive Filter
% Входные сигналы       
delay   = round( N/2 );                           % Задержка сдвигового регистра
d       = [zeros(1,delay), DesiredSignal].';           % Задержанный опорный сигнал
x       = [zeros(1,N), TrainSignal, zeros(1,delay)].'; % Входной искаженный тренировочный сигнал
x_input = [zeros(1,N), InputSignal, zeros(1,delay)].'; % Входной искаженный полезный сигнал
nIter   = length(d);   
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~%


% Регистры фильтра
gamma        = 0.1*(std(x).^2);  % Константа
w            = zeros(N,1);                   % filter coefficients
e            = 0;     % Регистр вектора ошибок
FilterOutput = zeros(1, nIter);
ErrorSignal  = zeros(1, nIter);     % Регистр вектора выходного сигнала фильтра
ErrorSquare  = zeros(1, nIter);     % Регистр квадрата вектора ошибок
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~%

% Вычисление коэффициентов фильтра
for i = 1:nIter
    u       = x(i+N-1:-1:i);
    e       = d(i)-w'*u;
    w       = w+(mu/(gamma+u'*u))*conj(e)*u;

end
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~%

for i = 1:length(x_input)-N
    u_input = x_input(i+N-1:-1:i);
    
    % Post
    FilterOutput(i) = w'*u_input;
end

FilterOutput = FilterOutput(delay+1:end);
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
end